//You are given two arrays, A and B, of equal size N. The task is to find the minimum value of A[0] * B[0] + A[1] * B[1] + .... + A[N-1] * B[N-1], where shuffling of elements of arrays A and B is allowed.

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution{
    public:
    long long int minValue(int a[], int b[], int n)
    {
        // Your code goes here
        long long int sum=0;
        vector<int> A;
        vector<int> B;
        vector<int> C;
        for(int i=0; i<n; i++)
        {
            A.push_back(a[i]);
            B.push_back(b[i]);
        }
        sort(A.begin(), A.end());
        sort(B.begin(), B.end());
        for(int i=n-1; i>=0; i--)
        {
            C.push_back(B[i]);
        }
        //long long int minsum=0;
        for(int i=0; i<n; i++)
        {
            sum=sum+A[i]*C[i];
        }
        return sum;
    }
};

//{ Driver Code Starts.
int main()
 {
     int t;
     cin>>t;
     while(t--)
     {
         int n, i;
         cin>>n;
         int a[n], b[n];
         for(i=0;i<n;i++)
         cin>>a[i];
         for(i=0;i<n;i++)
         cin>>b[i];
         Solution ob;
         cout<< ob.minValue(a, b, n) <<endl;
     }
	
	return 0;
}
// } Driver Code Ends
